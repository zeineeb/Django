# Generated by Django 4.1.7 on 2023-03-03 13:43

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=255, validators=[events.models.title_valid]
                    ),
                ),
                ("description", models.TextField()),
                ("image", models.ImageField(upload_to="images/")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Musique", "Musique"),
                            ("Cinema", "Cinema"),
                            ("Sport", "Sport"),
                        ],
                        max_length=8,
                        verbose_name="category",
                    ),
                ),
                ("state", models.BooleanField(default=False)),
                (
                    "nbe_participant",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=0,
                                message="le nombre de participant doit Ãªtre positif",
                            )
                        ],
                    ),
                ),
                ("evt_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organizer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name": "Evenement", "verbose_name_plural": "Evenements",},
        ),
        migrations.CreateModel(
            name="Participation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_participation", models.DateTimeField(auto_now_add=True)),
                (
                    "Person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="events.event"
                    ),
                ),
            ],
            options={"unique_together": {("Person", "event")},},
        ),
        migrations.AddField(
            model_name="event",
            name="participations",
            field=models.ManyToManyField(
                related_name="participations",
                through="events.Participation",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="event",
            constraint=models.CheckConstraint(
                check=models.Q(("evt_date__gte", datetime.date(2023, 3, 3))),
                name="the event date is invalid",
            ),
        ),
    ]
